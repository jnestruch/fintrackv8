# Generated by Django 5.2.6 on 2025-09-28 19:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('type', models.CharField(choices=[('BROKERAGE', 'Brokerage'), ('BANK', 'Bank'), ('WALLET', 'Crypto wallet'), ('CASH', 'Cash'), ('PROPERTY', 'Property'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('base_currency', models.CharField(default='EUR', max_length=3)),
                ('institution', models.CharField(blank=True, max_length=120)),
                ('account_ref', models.CharField(blank=True, max_length=120)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=120, unique=True)),
                ('level', models.PositiveSmallIntegerField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='portfolio.assettype')),
            ],
            options={
                'verbose_name': 'Asset type',
                'verbose_name_plural': 'Asset types',
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('CASH', 'Cash'), ('INVESTMENT', 'Investment'), ('REAL_ESTATE', 'Real estate'), ('PRECIOUS_METAL', 'Precious metal'), ('COLLECTIBLE', 'Collectible'), ('OTHER', 'Other')], max_length=32)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='portfolio.account')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assets', to='portfolio.assettype')),
            ],
        ),
        migrations.CreateModel(
            name='CashDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_ref', models.CharField(blank=True, max_length=120)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cash', to='portfolio.asset')),
            ],
        ),
        migrations.CreateModel(
            name='CollectibleDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=80)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('certificate_id', models.CharField(blank=True, max_length=120)),
                ('notes', models.TextField(blank=True)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='collectible', to='portfolio.asset')),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memo', models.CharField(blank=True, max_length=120)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='investment', to='portfolio.asset')),
                ('instrument', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='holdings', to='catalog.instrument')),
                ('listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='positions', to='catalog.listing')),
                ('token', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='holdings', to='catalog.token')),
            ],
        ),
        migrations.CreateModel(
            name='OtherDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='other', to='portfolio.asset')),
            ],
        ),
        migrations.CreateModel(
            name='PreciousMetalDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metal', models.CharField(choices=[('GOLD', 'Gold'), ('SILVER', 'Silver'), ('PLATINUM', 'Platinum'), ('PALLADIUM', 'Palladium')], max_length=12)),
                ('purity', models.DecimalField(decimal_places=3, max_digits=6)),
                ('form', models.CharField(blank=True, max_length=40)),
                ('weight_grams', models.DecimalField(decimal_places=3, max_digits=12)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metal', to='portfolio.asset')),
            ],
        ),
        migrations.CreateModel(
            name='RealEstateDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=250)),
                ('country', models.CharField(max_length=2)),
                ('cadastral_id', models.CharField(blank=True, max_length=64)),
                ('area_sqm', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='realestate', to='portfolio.asset')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('txn_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('DEPOSIT', 'Deposit'), ('WITHDRAWAL', 'Withdrawal'), ('INCOME', 'Income'), ('EXPENSE', 'Expense'), ('ADJUSTMENT', 'Adjustment')], max_length=16)),
                ('quantity', models.DecimalField(blank=True, decimal_places=8, max_digits=24, null=True)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=24)),
                ('fee', models.DecimalField(decimal_places=8, default=0, max_digits=24)),
                ('memo', models.CharField(blank=True, max_length=280)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='portfolio.asset')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['owner', 'is_active'], name='portfolio_a_owner_i_11278f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='account',
            unique_together={('owner', 'name')},
        ),
        migrations.AddIndex(
            model_name='assettype',
            index=models.Index(fields=['slug'], name='portfolio_a_slug_65da47_idx'),
        ),
        migrations.AddIndex(
            model_name='assettype',
            index=models.Index(fields=['level'], name='portfolio_a_level_61b640_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='assettype',
            unique_together={('parent', 'name')},
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['account', 'category'], name='portfolio_a_account_1afdfe_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['type'], name='portfolio_a_type_id_f87f8b_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['is_active'], name='portfolio_a_is_acti_fb8f69_idx'),
        ),
        migrations.AddConstraint(
            model_name='asset',
            constraint=models.UniqueConstraint(condition=models.Q(('category', 'CASH')), fields=('account',), name='unique_one_cash_asset_per_account'),
        ),
        migrations.AddConstraint(
            model_name='investmentdetails',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('listing__isnull', False), ('token__isnull', True)), models.Q(('listing__isnull', True), ('token__isnull', False)), _connector='OR'), name='one_listing_or_token'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['asset', 'timestamp'], name='portfolio_t_asset_i_d4b80a_idx'),
        ),
    ]
